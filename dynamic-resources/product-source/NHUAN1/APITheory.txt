Lập trình với API
Với dân lập trình, có lẽ không ai là không biết đến API. Từ backend đến Front end, ai ai cũng cần hiểu biết về API. Ngày trước hồi mới đi thực tập mình cũng được giao nhiệm vụ làm API, và cũng ngớ người ra không biết API là gì, do vậy, hôm nay viết bài giúp các bạn mới vào nghề hiểu 1 chút về API nhé.
API là viết tắt của Application Programming Interface, hay dịch ra  tiếng Việt là giao diện lập trình ứng dụng. Nghe thì có vẻ khó hiểu thế, nhưng chúng ta chỉ cần hiểu đơn giản, đó là 1 lời gọi trong chương trình thôi. Trong giới lập trình Web, thì API được hiểu là Server API, hay là 1 cách giao tiếp tới server, những lời gọi tới server và trả về kết quả.
Thông thường, những trang web sẽ trả về HTML và CSS cho trình duyệt. Tuy nhiên, với những trang web hiện đại, việc tương tác nhiều hơn với server là cần thiết, do vậy trong trang web sẽ ẩn chứa rất nhiều lời gọi tới server, có thể nhỏ nhặt được viết bằng Javascript. Ở đây, chúng ta lại biết thêm 1 định nghĩa SPA - Single Page App, là 1 App, chỉ có 1 trang HTML, nhưng có rất nhiều JS và API tương tác với server sau đó. (Ở mức độ đơn giản, chúng ta chỉ cần hiểu như vậy). Các framework JS mà chúng ta hay được nghe đến như Angular, Vue, React hầu như được sinh ra để làm các SPA.
Đối với phía server, việc viết API cho các hệ thống kiểu này cũng trở nên phổ biến hơn. Bên phía server, sẽ không phải xử lý hiển thị hay HTML nhiều như trước nữa, mà thay vào đó chỉ xử lý các logic liên quan đến database và trả về kết quả theo format định sẵn (thường là JSON). Do đó, có rất nhiều các framework được sinh ra với mục đích này nhằm giảm thiểu độ phức tạp và tinh gọn cho hệ thống server. Chúng ta có thể điểm qua một vài loại có cú pháp tương đối đơn giản và dễ hiểu, dễ tiếp cận như PHP có SlimPHP, Python có flask, NodeJS có Express, ... 
Những loại framework này có đặc điểm là chúng tương đối giống nhau, làm 1 nhiệm vụ cụ thể là xử lý API (Router -> hàm xử lý), không phân chia quá nhiều thành phần MVC như các framework lớn, mà tập trung vào Model và Controller là chủ yếu. Do đó, thời gian học cũng ngắn hơn, và tập trung vào các thành phần trên Server.
Nếu ngày xưa, khi bắt đầu, chúng ta cần học 1 framework xịn xò đầy đủ chức năng (và có thể bị ngợp bởi vô vàn các tính năng con con) thì giờ đây, chúng ta có thể bắt đầu với một vài framework nhỏ gọn hơn. Tất nhiên, các bạn sẽ phải xác định là nó không có quá nhiều thứ nặng nề như 1 framework lớn, nhưng nó thực tế sử dụng được, và tiện lợi cho quá trình phát triển.